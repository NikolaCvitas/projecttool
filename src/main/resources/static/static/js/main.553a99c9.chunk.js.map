{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagment/Register.js","components/UserManagment/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","handleChange","date","setState","start_date","end_date","errors","onChange","onSubmit","nextProps","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","moment","Date","format","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","console","log","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.553a99c9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n\r\n    // bug fix, every time when we create project wipe out error data\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  //datepicker test\r\n  handleChange = (date) => {\r\n    this.setState({\r\n      start_date: this.state.start_date,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={moment(new Date(this.state.start_date)).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={moment(new Date(this.state.end_date)).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (backlog_id, project_task, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      console.log(tasks[i]);\r\n\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={moment(new Date(this.state.dueDate)).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagment/Register\";\r\nimport Login from \"./components/UserManagment/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Routes\r\n            }\r\n\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n\r\n            {\r\n              //Private Routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                component={UpdateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}